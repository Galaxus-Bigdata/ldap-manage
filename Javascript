// Helper method to transform the API response data if needed
transformResponse(data) {
  const transformedData = [];

  for (const metric of data.metrics) {
    const timeSeries = {
      target: metric.metricname, // Set the metric name as the target
      datapoints: [],
    };

    const metrics = metric.metrics;

    for (const timestamp in metrics) {
      if (metrics.hasOwnProperty(timestamp)) {
        const value = metrics[timestamp];

        // Convert the timestamp to milliseconds since epoch
        const epochTimestamp = parseInt(timestamp);

        // Create an array [value, timestamp] for each data point
        const datapoint = [value, epochTimestamp];

        // Add the datapoint to the time series
        timeSeries.datapoints.push(datapoint);
      }
    }

    // Add the time series to the transformed data array
    transformedData.push(timeSeries);
  }

  // Return the transformed data
  return transformedData;
}
